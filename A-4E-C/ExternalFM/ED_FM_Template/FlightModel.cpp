#include <vector>
#include <stdio.h>
#include "FlightModel.h"

//Tables
#define d_CLalpha {-0.62,-0.5928517500538861,-0.5660791877592576,-0.5395544195308914,-0.5131495517835641,-0.4867366909320529,-0.46018794339113445,-0.43337541557558573,-0.40617121390018374,-0.37844744477970504,-0.35007621462892685,-0.3209296298626259,-0.2908797968955789,-0.259798822142563,-0.22755881201835487,-0.19403187293773153,-0.15909011131546966,-0.12260563356634634,-0.08445054610513847,-0.044496955346622735,-0.0026169677055762203,0.04119967194635908,0.08638032399918036,0.13217214114110723,0.17782227991095478,0.22278779717082892,0.2672088287186069,0.3113642275627153,0.3555328467115799,0.39994062849282874,0.4444420230354891,0.4887323305580038,0.5325062453530804,0.5754632471452121,0.6176034117430811,0.6594006538551404,0.7013705878485711,0.7440288280905538,0.7878065099300791,0.8305906170374103,0.8678442105408427,0.8995257832412065,0.9220131966103622,0.93505579613183,0.9377491001927524,0.9207828508139589,0.892670221664186,0.8725675263873536,0.859073069331463,0.8494088225403229,0.8425732404268798,0.8387145839745844,0.8379554257752192,0.8381122238506523,0.8343606481837633,0.8215058269004676,0.7914216068212226,0.7339336645349858,0.6388257382637248,0.49588156622941126}
#define d_CDalpha {1.5,0.949092356575,0.555425325175,0.292578924413,0.134133172902,0.0536680892537,0.0247636920822,0.021,0.0247636920822,0.0536680892537,0.134133172902,0.292578924413,0.555425325175,0.949092356575,1.5 }
#define d_CDmach {0.0,0.0,0.0,0.0,0.0,0.000940909090909,0.0197590909091,0.0216283084005,0.0199712313003,0.0183141542002,0.0166570771001,0.015 }
#define d_CDbeta {1.23,0.978284308116,0.731177185308,0.501113771365,0.300529206075,0.141858629225,0.0375371806043,0.0,0.0375371806043,0.141858629225,0.300529206075,0.501113771365,0.731177185308,0.978284308116,1.23 }
#define d_CLflap {0.28631661553454824,0.2857509041556394,0.2853916322265178,0.2852256389733677,0.2852397636223738,0.28542084539972057,0.28575572353159273,0.2862309214633061,0.28683139050370726,0.2875415936583574,0.28834711405255725,0.28923976485336234,0.2902135123491046,0.29125861756451604,0.292342277101665,0.29342283199354297,0.29446524458885504,0.29548078137556566,0.296500427264435,0.2975493247792417,0.2986062536008963,0.29962813115937725,0.3005752634492768,0.3014390371631689,0.3022270431063664,0.3029467120918878,0.30360247411489605,0.3041970318041284,0.3047331341852939,0.3052142935664973,0.3056445067821481,0.30602777824575744,0.30636811044493206,0.3066695045204409,0.306935933951171,0.30717095872581024,0.3073778205274731,0.307559519236764,0.30771500137891017,0.3078397807931175,0.30792928663952013,0.3079794297608694,0.3079865695964513,0.30794708701324286,0.3078574668438445,0.3077143003815956,0.3075141548004194,0.3072527644926286,0.30692492616067596,0.3065254855685523,0.3060527567383943,0.3055093489155972,0.30489827240836825,0.3042283623524918,0.3035163919597926,0.3027796870757043,0.30203463924886326,0.3012962379273465,0.3005793579111591,0.2998989269396981,0.29926996031728875,0.29870748788897156,0.2982271570496762,0.2978457422931618,0.2975800918385194,0.2974406233248156,0.2974247873395428,0.29752846674117617,0.29774564515629687,0.29806606877428826,0.29847890538023303,0.29897152655580966,0.29952686266050915,0.30012716958251856,0.30075468564068963,0.30139160093236855,0.3020200978137534,0.30262314962030123,0.30318614345885936,0.3036949257223256,0.30413881948029897,0.3045189613253082,0.304838994713179,0.30510239453855675,0.305311997229775,0.30547048807334454,0.30557996793533876,0.3056400689226487,0.3056497713662549,0.3056107014536308,0.30553695390942825,0.3054462929033037,0.30535731193060445,0.3052929648961998,0.30527763458654367,0.3053335548641704,0.30547031752853476,0.3056929082881489,0.306006727696964,0.3064199519687915,0.30694187990250676,0.3075816498435331,0.30834719095432267,0.3092458904379399,0.3102853812979576,0.31147536256193653,0.3128265578336506,0.3143455719701955,0.3160002388870365,0.317737149472796,0.31950175995816765,0.321229751719153,0.32285089651862753,0.3242986773242495,0.32555267211172373,0.32662317449842815,0.32752420432048324,0.32831393940372805,0.3290829599691033,0.3299215623799423,0.3309034569939132,0.3320889614890022,0.33353467136829584,0.33523458080925456,0.3371270864672473,0.33914743624401955,0.34120406569392686,0.3431792264240429,0.3449552427375287,0.34644495569805006,0.34759397388289726,0.3483498168372411,0.34866940785066414,0.34852077426297495,0.34787231736731716,0.34668209665388355,0.3448947372450463,0.34245788944092165,0.3395103894284251,0.33646445879207465,0.3337519901500673,0.33171998152438475,0.3305816950592305,0.3305331724169168,0.33131508015897887,0.33187699749429184,0.3310906143134793,0.3279669095840279,0.321784029121727,0.31184613805742584,0.29674087070528143,0.27353632865758293,0.2391044004733767,0.18968318814054302,0.12002249298745983,0.024677105286062373,0.0,-0.11310607968880441,-0.1913588781194785,-0.21629977975854464,-0.20400952738600187,-0.17677823413915383,-0.15234690046790791,-0.13381024820831336,-0.12132113335448352,-0.11503241190053068,-0.1150969398405671,-0.12166757316870491}
#define d_CLslat {0.00041694260096494795,0.002733405629083141,0.0038384076115812187,0.003910681660155332,0.0031289608865017193,0.0016719784023165633,0.0,-0.0022713065701596424,-0.004681675515762179,-0.007052373725111416,-0.009204668086511212,-0.010961582903150469,-0.012191361109297472,-0.012924984487606902,-0.01331639271297258,-0.013524630311002428,-0.013708704093252979,-0.01398564990211687,-0.01434365081345862,-0.014735224453231888,-0.015111257217383822,-0.015422635501861404,-0.015624570167677487,-0.015830017089246806,-0.0162654078040404,-0.01700977561524064,-0.018124954051609746,-0.019672776641910028,-0.021710426483849687,-0.023478963391772023,-0.022489649170284287,-0.017120087757045876,-0.008724458133673065,0.003856260736967654,0.022554522956356737,0.04280544194683089,0.06907554510832048,0.10621661302745278,0.15275212233333224,0.19673602717607253,0.23271733254902527,0.2612410622630479,0.2837825855981376,0.3025121885912115,0.31776699669135067,0.3290910507044159,0.33603021469323685,0.3392217891575611,0.34071481958975225,0.34535883025604525,0.35895615751929266,0.3549637795607583,0.27832438650338787,0.07304878573358477,0.01593547885175417,0.01593547885175417}

//Set everything to zero.
//Vectors already constructor to zero vector.
Skyhawk::FlightModel::FlightModel(Input& controls, Airframe& airframe, Engine& engine):
	m_controls(controls),
	m_airframe(airframe),
	m_engine(engine),
	m_density(0.0),
	m_speedOfSound(0.0),
	m_aoa(0.0),
	m_beta(0.0),
	m_scalarVSquared(0.0),
	m_scalarV(0.0),
	m_aileronLeft(0.0),
	m_aileronRight(0.0),
	m_elevator(0.0),
	m_rudder(0.0),
	m_q(0.0),
	m_p(0.0),
	m_k(0.0),
	m_mach(0.0),
	m_aoaDot(0.0),
	m_aoaPrevious(0.0),

	//Setup tables
	CLalpha(d_CLalpha, -0.2698, 0.5255),
	dCLflap(d_CLflap, -0.05871, 0.5255),
	dCLslat(d_CLslat, -0.06933, 0.5255),
	CLde({0.2}, c_elevatorDown, c_elevatorUp),

	CDalpha(d_CDalpha,-1.57, 1.57),
	CDi({0.09}, 0, 1),
	CDmach(d_CDmach,0.0, 1.8),
	CDflap({0.153}, c_flapUp, c_flapDown),
	CDspeedBrake({0.021}, 0.0, 1.0),
	CDbeta(d_CDbeta,-1.57, 1.57),
	CDde({0.12}, c_elevatorDown, c_elevatorUp),

	CYb({-1}, 0.0, 1.0),

	Clb({ -0.01 }, 0.0, 1.0),
	Clp({ -0.3 }, 0.0, 1.0),
	Clr({ 0.15 }, 0.0, 1.0),
	Cla({ 0.220, 0.037 }, 0.0, 2.0), //110
	Cldr({ 0.01 }, 0.0, 1.0),

	Cmalpha({-0.38}, 0.0, 1.0),
	Cmde({-0.5,-0.2}, 0.0, 2.0), //x = mach
	Cmq({-3.6}, 0.0, 1.0),
	Cmadot({-1.1}, 0.0, 1.0),

	Cnb({0.12}, 0.0, 1.0),
	Cnr({-0.15}, 0.0, 1.0),
	Cndr({-0.1}, 0.0, 1.0),
	Cnda({0.0}, 0.0, 1.0)
{

}

Skyhawk::FlightModel::~FlightModel()
{

}

void Skyhawk::FlightModel::coldInit()
{

}

void Skyhawk::FlightModel::hotInit()
{

}

void Skyhawk::FlightModel::airbornInit()
{

}

//This calculates only aerodynamic forces and moments.
void Skyhawk::FlightModel::calculateAero()
{

	lift();
	drag();
	sideForce();
	thrustForce();

	L_stab();
	M_stab();
	N_stab();
	//printf("moment.z: %lf, beta: %lf, m_q: %lf, m_p: %lf, omegax: %lf, omegay: %lf, Cla(mach): %lf\n", 
		//m_moment.z, m_beta, m_q, m_p, m_omega.x, m_omega.y, Cla(m_mach));
}

//This calculates all forces and moments. Including landing gear.
void Skyhawk::FlightModel::calculateForcesAndMoments(double dt)
{
	//Reset at the start of the frame.
	m_force = Vec3();
	m_moment = Vec3();

	m_aoaDot = (m_aoa - m_aoaPrevious) / dt;

	//Get airspeed and scalar speed squared.
	m_airspeed = m_worldVelocity - m_wind;
	m_scalarVSquared = m_airspeed.x * m_airspeed.x + m_airspeed.y * m_airspeed.y + m_airspeed.z * m_airspeed.z;

	m_scalarV = sqrt(m_scalarVSquared);
	m_mach = m_scalarV / m_speedOfSound;

	m_k = m_scalarVSquared * m_density * 0.5 * m_totalWingArea;
	m_q = m_k * m_totalWingSpan;
	m_p = sqrt(m_scalarVSquared) * m_density * 0.25 * m_totalWingArea * m_totalWingSpan * m_totalWingSpan;

	calculateAero();

	m_aoaPrevious = m_aoa;
}